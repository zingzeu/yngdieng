# Build docker images (i.e. server side artifacts)

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - server/*
    - assets/*
    - shared/*
    - web/*
    - thirdparty/*
    - package.json
    - WORKSPACE

pr:
  branches:
    include:
    - master
  paths:
    include:
    - server/*
    - assets/*
    - shared/*
    - web/*
    - thirdparty/*
    - package.json
    - WORKSPACE

schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - master
  always: true

variables:
  BAZEL_OUTPUT_BASE: $(Pipeline.Workspace)/.bazel
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

pool:
  vmImage: 'ubuntu-latest'

steps:
# See https://docs.microsoft.com/en-us/azure/devops/pipelines/release/caching?view=azure-devops

- task: Cache@2
  displayName: "Cache: yarn"
  inputs:
    key: 'yarn2 | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
      yarn2 | "$(Agent.OS)"
    path: $(YARN_CACHE_FOLDER)
    
- task: DownloadSecureFile@1
  name: gcpKey
  inputs:
    secureFile: 'yngdieng-azdo-gcp-secret.json'

- script: |
    echo "startup --output_base=$(BAZEL_OUTPUT_BASE)
    common --color=no
    common --curses=yes

    build --remote_http_cache=https://storage.googleapis.com/yngdieng-bazel-cache
    build --google_credentials=$(gcpKey.secureFilePath)
    build --show_progress_rate_limit=0
    build --show_task_finish
    build --show_timestamps
    build --worker_verbose" >> .bazelrc

    cat .bazelrc

- script: |
    sudo apt install curl
    curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
    echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
    sudo apt update && sudo apt install -y bazel ffmpeg
    bazel version
  displayName: 'Install bazel, ffmpeg'

- script: |
    bazel build --config=release //server/gateway:image //assets:tts_audio_wav_image &&
    bazel run --config=release //server/gateway:image &&
    bazel run --config=release //assets:tts_audio_wav_image &&
    docker tag bazel/server/gateway:image ztl8702/yngdieng-grpc-gateway:ci-$(Build.BuildNumber) &&
    docker tag bazel/server/gateway:image registry.cn-hangzhou.aliyuncs.com/zingzeu/yngdieng-grpc-gateway:ci-$(Build.BuildNumber)
  displayName: 'Bazel build: grpc-gateway, TTS Audio image'

- script: |
    ./docker_build.sh ci-$(Build.BuildNumber)
  displayName: 'Hacky Docker build'

- task: Docker@2
  displayName: push yngdieng-backend (DockerHub)
  inputs:
    command: push
    repository: ztl8702/yngdieng-backend
    containerRegistry: dockerHub
    tags: |
       ci-$(Build.BuildNumber)

- task: Docker@2
  displayName: push yngdieng-backend (Aliyun)
  inputs:
    command: push
    repository: zingzeu/yngdieng-backend
    containerRegistry: aliyunContainerRegistry
    tags: |
       ci-$(Build.BuildNumber)

- task: Docker@2
  displayName: push yngdieng-grpc-gateway (DockerHub)
  inputs:
    command: push
    repository: ztl8702/yngdieng-grpc-gateway
    containerRegistry: dockerHub
    tags: |
       ci-$(Build.BuildNumber)
       
- task: Docker@2
  displayName: push yngdieng-grpc-gateway (Aliyun)
  inputs:
    command: push
    repository: zingzeu/yngdieng-grpc-gateway
    containerRegistry: aliyunContainerRegistry
    tags: |
       ci-$(Build.BuildNumber)
