# Build deployable web artifacts

trigger:
  branches:
    include:
    - master
  paths:
    include:
    - assets/*
    - shared/*
    - web/*
    - thirdparty/*
    - package.json
    - WORKSPACE

pr:
  branches:
    include:
    - master
  paths:
    include:
    - assets/*
    - shared/*
    - web/*
    - thirdparty/*
    - package.json
    - WORKSPACE

variables:
  BAZEL_OUTPUT_BASE: $(Pipeline.Workspace)/.bazel
  YARN_CACHE_FOLDER: $(Pipeline.Workspace)/.yarn

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Cache@2
  displayName: "Cache: yarn"
  inputs:
    key: 'yarn | "$(Agent.OS)" | yarn.lock'
    restoreKeys: |
      yarn | "$(Agent.OS)"
    path: $(YARN_CACHE_FOLDER)
    
- task: DownloadSecureFile@1
  name: gcpKey
  inputs:
    secureFile: 'yngdieng-azdo-gcp-secret.json'

- script: |
    echo "startup --output_base=$(BAZEL_OUTPUT_BASE)
    common --color=no
    common --curses=yes

    build --remote_http_cache=https://storage.googleapis.com/yngdieng-bazel-cache
    build --google_credentials=$(gcpKey.secureFilePath)
    build --show_progress_rate_limit=0
    build --show_task_finish
    build --show_timestamps
    build --worker_verbose" >> .bazelrc

    cat .bazelrc

- script: |
    sudo apt install curl
    curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
    echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
    sudo apt update && sudo apt install -y bazel ffmpeg
    bazel version
  displayName: 'Install bazel, ffmpeg'

- script: |
    bazel build --config=release //web/src:prodapp //web/src:staging_app 
  displayName: 'Bazel build'

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.Repository.LocalPath)/dist/bin/web/src/prodapp
    artifactName: prodapp

- task: PublishBuildArtifacts@1
  inputs:
    pathtoPublish: $(Build.Repository.LocalPath)/dist/bin/web/src/staging_app
    artifactName: staging_app
