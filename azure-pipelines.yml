# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- master

schedules:
- cron: "0 12 * * 0"
  displayName: Weekly Sunday build
  branches:
    include:
    - master
  always: true

variables:
  BAZEL_CACHE: $(Pipeline.Workspace)/.bazelcache

pool:
  vmImage: 'ubuntu-latest'

steps:
- task: Cache@2
  inputs:
    key: bazel
    path: $(BAZEL_CACHE)
    cacheHitVar: CACHE_RESTORED
- script: |
    echo "build --disk_cache=$(BAZEL_CACHE)" >> .bazelrc
- script: |
    sudo apt install curl
    curl https://bazel.build/bazel-release.pub.gpg | sudo apt-key add -
    echo "deb [arch=amd64] https://storage.googleapis.com/bazel-apt stable jdk1.8" | sudo tee /etc/apt/sources.list.d/bazel.list
    sudo apt update && sudo apt install bazel
  displayName: 'Install bazel'

- script: |
    bazel build //...
  displayName: 'Bazel Build'

- script: |
    bazel test //web/...
  displayName: 'Bazel Test //web/...'

- script: |
    pushd server && \
    dotnet build && \
    popd && \
    pushd servertests/backend && \
    dotnet test && \
    popd
  displayName: 'dotnet build&test'

- script: |
    mkdir -p ./.build/yngdieng-web
    bazel build //web/src:prodapp
    cp -r ./dist/bin/web/src/prodapp ./.build/yngdieng-web/
    cp -r ./docker/yngdieng-web/nginx.conf ./.build/yngdieng-web/
  displayName: 'Hacky build'

- task: Docker@2
  displayName: Build and push ztl8702/yngdieng-web
  inputs:
    command: buildAndPush
    repository: ztl8702/yngdieng-web
    dockerfile: docker/yngdieng-web/Dockerfile
    buildContext: ./.build/yngdieng-web
    containerRegistry: dockerHub
    tags: |
       latest
       ci-$(Build.BuildNumber)

- task: Docker@2
  displayName: Build and push ztl8702/yngdieng-backend
  inputs:
    command: buildAndPush
    repository: ztl8702/yngdieng-backend
    dockerfile: docker/yngdieng-backend/Dockerfile
    buildContext: ./server
    containerRegistry: dockerHub
    tags: |
       latest
       ci-$(Build.BuildNumber)
# TODO run tests
