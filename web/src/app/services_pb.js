// source: services.proto
/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var phonology_pb = require('./phonology_pb.js');
goog.object.extend(proto, phonology_pb);
var documents_pb = require('./documents_pb.js');
goog.object.extend(proto, documents_pb);
goog.exportSymbol('proto.yngdieng.GetDocumentRequest', null, global);
goog.exportSymbol('proto.yngdieng.GetDocumentRequest.DocumentIdCase', null, global);
goog.exportSymbol('proto.yngdieng.GetDocumentResponse', null, global);
goog.exportSymbol('proto.yngdieng.Query', null, global);
goog.exportSymbol('proto.yngdieng.Query.PhonologyQuery', null, global);
goog.exportSymbol('proto.yngdieng.Query.QueryCase', null, global);
goog.exportSymbol('proto.yngdieng.SearchRequest', null, global);
goog.exportSymbol('proto.yngdieng.SearchResponse', null, global);
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.SearchRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yngdieng.SearchRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.SearchRequest.displayName = 'proto.yngdieng.SearchRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.SearchResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.yngdieng.SearchResponse.repeatedFields_, null);
};
goog.inherits(proto.yngdieng.SearchResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.SearchResponse.displayName = 'proto.yngdieng.SearchResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.GetDocumentRequest = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.yngdieng.GetDocumentRequest.oneofGroups_);
};
goog.inherits(proto.yngdieng.GetDocumentRequest, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.GetDocumentRequest.displayName = 'proto.yngdieng.GetDocumentRequest';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.GetDocumentResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yngdieng.GetDocumentResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.GetDocumentResponse.displayName = 'proto.yngdieng.GetDocumentResponse';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.Query = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, proto.yngdieng.Query.oneofGroups_);
};
goog.inherits(proto.yngdieng.Query, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.Query.displayName = 'proto.yngdieng.Query';
}
/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.yngdieng.Query.PhonologyQuery = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.yngdieng.Query.PhonologyQuery, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  /**
   * @public
   * @override
   */
  proto.yngdieng.Query.PhonologyQuery.displayName = 'proto.yngdieng.Query.PhonologyQuery';
}



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.SearchRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.SearchRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.SearchRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.SearchRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    query: (f = msg.getQuery()) && proto.yngdieng.Query.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.SearchRequest}
 */
proto.yngdieng.SearchRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.SearchRequest;
  return proto.yngdieng.SearchRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.SearchRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.SearchRequest}
 */
proto.yngdieng.SearchRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.yngdieng.Query;
      reader.readMessage(value,proto.yngdieng.Query.deserializeBinaryFromReader);
      msg.setQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.SearchRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.SearchRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.SearchRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.SearchRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getQuery();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.yngdieng.Query.serializeBinaryToWriter
    );
  }
};


/**
 * optional Query query = 1;
 * @return {?proto.yngdieng.Query}
 */
proto.yngdieng.SearchRequest.prototype.getQuery = function() {
  return /** @type{?proto.yngdieng.Query} */ (
    jspb.Message.getWrapperField(this, proto.yngdieng.Query, 1));
};


/**
 * @param {?proto.yngdieng.Query|undefined} value
 * @return {!proto.yngdieng.SearchRequest} returns this
*/
proto.yngdieng.SearchRequest.prototype.setQuery = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yngdieng.SearchRequest} returns this
 */
proto.yngdieng.SearchRequest.prototype.clearQuery = function() {
  return this.setQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.SearchRequest.prototype.hasQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.yngdieng.SearchResponse.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.SearchResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.SearchResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.SearchResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.SearchResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    documentsList: jspb.Message.toObjectList(msg.getDocumentsList(),
    documents_pb.Document.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.SearchResponse}
 */
proto.yngdieng.SearchResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.SearchResponse;
  return proto.yngdieng.SearchResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.SearchResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.SearchResponse}
 */
proto.yngdieng.SearchResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new documents_pb.Document;
      reader.readMessage(value,documents_pb.Document.deserializeBinaryFromReader);
      msg.addDocuments(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.SearchResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.SearchResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.SearchResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.SearchResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocumentsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      documents_pb.Document.serializeBinaryToWriter
    );
  }
};


/**
 * repeated Document documents = 1;
 * @return {!Array<!proto.yngdieng.Document>}
 */
proto.yngdieng.SearchResponse.prototype.getDocumentsList = function() {
  return /** @type{!Array<!proto.yngdieng.Document>} */ (
    jspb.Message.getRepeatedWrapperField(this, documents_pb.Document, 1));
};


/**
 * @param {!Array<!proto.yngdieng.Document>} value
 * @return {!proto.yngdieng.SearchResponse} returns this
*/
proto.yngdieng.SearchResponse.prototype.setDocumentsList = function(value) {
  return jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.yngdieng.Document=} opt_value
 * @param {number=} opt_index
 * @return {!proto.yngdieng.Document}
 */
proto.yngdieng.SearchResponse.prototype.addDocuments = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.yngdieng.Document, opt_index);
};


/**
 * Clears the list making it empty but non-null.
 * @return {!proto.yngdieng.SearchResponse} returns this
 */
proto.yngdieng.SearchResponse.prototype.clearDocumentsList = function() {
  return this.setDocumentsList([]);
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.yngdieng.GetDocumentRequest.oneofGroups_ = [[1,2]];

/**
 * @enum {number}
 */
proto.yngdieng.GetDocumentRequest.DocumentIdCase = {
  DOCUMENT_ID_NOT_SET: 0,
  CIKLIN_ID: 1,
  DFD_ID: 2
};

/**
 * @return {proto.yngdieng.GetDocumentRequest.DocumentIdCase}
 */
proto.yngdieng.GetDocumentRequest.prototype.getDocumentIdCase = function() {
  return /** @type {proto.yngdieng.GetDocumentRequest.DocumentIdCase} */(jspb.Message.computeOneofCase(this, proto.yngdieng.GetDocumentRequest.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.GetDocumentRequest.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.GetDocumentRequest.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.GetDocumentRequest} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.GetDocumentRequest.toObject = function(includeInstance, msg) {
  var f, obj = {
    ciklinId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    dfdId: jspb.Message.getFieldWithDefault(msg, 2, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.GetDocumentRequest}
 */
proto.yngdieng.GetDocumentRequest.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.GetDocumentRequest;
  return proto.yngdieng.GetDocumentRequest.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.GetDocumentRequest} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.GetDocumentRequest}
 */
proto.yngdieng.GetDocumentRequest.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setCiklinId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setDfdId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.GetDocumentRequest.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.GetDocumentRequest.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.GetDocumentRequest} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.GetDocumentRequest.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt32(
      2,
      f
    );
  }
};


/**
 * optional int32 ciklin_id = 1;
 * @return {number}
 */
proto.yngdieng.GetDocumentRequest.prototype.getCiklinId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {number} value
 * @return {!proto.yngdieng.GetDocumentRequest} returns this
 */
proto.yngdieng.GetDocumentRequest.prototype.setCiklinId = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.yngdieng.GetDocumentRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yngdieng.GetDocumentRequest} returns this
 */
proto.yngdieng.GetDocumentRequest.prototype.clearCiklinId = function() {
  return jspb.Message.setOneofField(this, 1, proto.yngdieng.GetDocumentRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.GetDocumentRequest.prototype.hasCiklinId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int32 dfd_id = 2;
 * @return {number}
 */
proto.yngdieng.GetDocumentRequest.prototype.getDfdId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {number} value
 * @return {!proto.yngdieng.GetDocumentRequest} returns this
 */
proto.yngdieng.GetDocumentRequest.prototype.setDfdId = function(value) {
  return jspb.Message.setOneofField(this, 2, proto.yngdieng.GetDocumentRequest.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yngdieng.GetDocumentRequest} returns this
 */
proto.yngdieng.GetDocumentRequest.prototype.clearDfdId = function() {
  return jspb.Message.setOneofField(this, 2, proto.yngdieng.GetDocumentRequest.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.GetDocumentRequest.prototype.hasDfdId = function() {
  return jspb.Message.getField(this, 2) != null;
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.GetDocumentResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.GetDocumentResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.GetDocumentResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.GetDocumentResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    document: (f = msg.getDocument()) && documents_pb.Document.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.GetDocumentResponse}
 */
proto.yngdieng.GetDocumentResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.GetDocumentResponse;
  return proto.yngdieng.GetDocumentResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.GetDocumentResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.GetDocumentResponse}
 */
proto.yngdieng.GetDocumentResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new documents_pb.Document;
      reader.readMessage(value,documents_pb.Document.deserializeBinaryFromReader);
      msg.setDocument(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.GetDocumentResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.GetDocumentResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.GetDocumentResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.GetDocumentResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDocument();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      documents_pb.Document.serializeBinaryToWriter
    );
  }
};


/**
 * optional Document document = 1;
 * @return {?proto.yngdieng.Document}
 */
proto.yngdieng.GetDocumentResponse.prototype.getDocument = function() {
  return /** @type{?proto.yngdieng.Document} */ (
    jspb.Message.getWrapperField(this, documents_pb.Document, 1));
};


/**
 * @param {?proto.yngdieng.Document|undefined} value
 * @return {!proto.yngdieng.GetDocumentResponse} returns this
*/
proto.yngdieng.GetDocumentResponse.prototype.setDocument = function(value) {
  return jspb.Message.setWrapperField(this, 1, value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yngdieng.GetDocumentResponse} returns this
 */
proto.yngdieng.GetDocumentResponse.prototype.clearDocument = function() {
  return this.setDocument(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.GetDocumentResponse.prototype.hasDocument = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Oneof group definitions for this message. Each group defines the field
 * numbers belonging to that group. When of these fields' value is set, all
 * other fields in the group are cleared. During deserialization, if multiple
 * fields are encountered for a group, only the last value seen will be kept.
 * @private {!Array<!Array<number>>}
 * @const
 */
proto.yngdieng.Query.oneofGroups_ = [[1,2,3]];

/**
 * @enum {number}
 */
proto.yngdieng.Query.QueryCase = {
  QUERY_NOT_SET: 0,
  FUZZY_PRON_QUERY: 1,
  PHONOLOGY_QUERY: 2,
  HANZI_QUERY: 3
};

/**
 * @return {proto.yngdieng.Query.QueryCase}
 */
proto.yngdieng.Query.prototype.getQueryCase = function() {
  return /** @type {proto.yngdieng.Query.QueryCase} */(jspb.Message.computeOneofCase(this, proto.yngdieng.Query.oneofGroups_[0]));
};



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.Query.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.Query.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.Query} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.Query.toObject = function(includeInstance, msg) {
  var f, obj = {
    fuzzyPronQuery: jspb.Message.getFieldWithDefault(msg, 1, ""),
    phonologyQuery: (f = msg.getPhonologyQuery()) && proto.yngdieng.Query.PhonologyQuery.toObject(includeInstance, f),
    hanziQuery: jspb.Message.getFieldWithDefault(msg, 3, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.Query}
 */
proto.yngdieng.Query.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.Query;
  return proto.yngdieng.Query.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.Query} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.Query}
 */
proto.yngdieng.Query.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setFuzzyPronQuery(value);
      break;
    case 2:
      var value = new proto.yngdieng.Query.PhonologyQuery;
      reader.readMessage(value,proto.yngdieng.Query.PhonologyQuery.deserializeBinaryFromReader);
      msg.setPhonologyQuery(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setHanziQuery(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.Query.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.Query.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.Query} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.Query.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getPhonologyQuery();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.yngdieng.Query.PhonologyQuery.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};





if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * Optional fields that are not set will be set to undefined.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     net/proto2/compiler/js/internal/generator.cc#kKeyword.
 * @param {boolean=} opt_includeInstance Deprecated. whether to include the
 *     JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @return {!Object}
 */
proto.yngdieng.Query.PhonologyQuery.prototype.toObject = function(opt_includeInstance) {
  return proto.yngdieng.Query.PhonologyQuery.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Deprecated. Whether to include
 *     the JSPB instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.yngdieng.Query.PhonologyQuery} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.Query.PhonologyQuery.toObject = function(includeInstance, msg) {
  var f, obj = {
    initial: jspb.Message.getFieldWithDefault(msg, 1, 0),
    pb_final: jspb.Message.getFieldWithDefault(msg, 2, 0),
    tone: jspb.Message.getFieldWithDefault(msg, 3, 0)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.yngdieng.Query.PhonologyQuery}
 */
proto.yngdieng.Query.PhonologyQuery.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.yngdieng.Query.PhonologyQuery;
  return proto.yngdieng.Query.PhonologyQuery.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.yngdieng.Query.PhonologyQuery} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.yngdieng.Query.PhonologyQuery}
 */
proto.yngdieng.Query.PhonologyQuery.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {!proto.yngdieng.Initial} */ (reader.readEnum());
      msg.setInitial(value);
      break;
    case 2:
      var value = /** @type {!proto.yngdieng.Final} */ (reader.readEnum());
      msg.setFinal(value);
      break;
    case 3:
      var value = /** @type {!proto.yngdieng.Tone} */ (reader.readEnum());
      msg.setTone(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.yngdieng.Query.PhonologyQuery.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.yngdieng.Query.PhonologyQuery.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.yngdieng.Query.PhonologyQuery} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.yngdieng.Query.PhonologyQuery.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getInitial();
  if (f !== 0.0) {
    writer.writeEnum(
      1,
      f
    );
  }
  f = message.getFinal();
  if (f !== 0.0) {
    writer.writeEnum(
      2,
      f
    );
  }
  f = message.getTone();
  if (f !== 0.0) {
    writer.writeEnum(
      3,
      f
    );
  }
};


/**
 * optional Initial initial = 1;
 * @return {!proto.yngdieng.Initial}
 */
proto.yngdieng.Query.PhonologyQuery.prototype.getInitial = function() {
  return /** @type {!proto.yngdieng.Initial} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/**
 * @param {!proto.yngdieng.Initial} value
 * @return {!proto.yngdieng.Query.PhonologyQuery} returns this
 */
proto.yngdieng.Query.PhonologyQuery.prototype.setInitial = function(value) {
  return jspb.Message.setProto3EnumField(this, 1, value);
};


/**
 * optional Final final = 2;
 * @return {!proto.yngdieng.Final}
 */
proto.yngdieng.Query.PhonologyQuery.prototype.getFinal = function() {
  return /** @type {!proto.yngdieng.Final} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/**
 * @param {!proto.yngdieng.Final} value
 * @return {!proto.yngdieng.Query.PhonologyQuery} returns this
 */
proto.yngdieng.Query.PhonologyQuery.prototype.setFinal = function(value) {
  return jspb.Message.setProto3EnumField(this, 2, value);
};


/**
 * optional Tone tone = 3;
 * @return {!proto.yngdieng.Tone}
 */
proto.yngdieng.Query.PhonologyQuery.prototype.getTone = function() {
  return /** @type {!proto.yngdieng.Tone} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/**
 * @param {!proto.yngdieng.Tone} value
 * @return {!proto.yngdieng.Query.PhonologyQuery} returns this
 */
proto.yngdieng.Query.PhonologyQuery.prototype.setTone = function(value) {
  return jspb.Message.setProto3EnumField(this, 3, value);
};


/**
 * optional string fuzzy_pron_query = 1;
 * @return {string}
 */
proto.yngdieng.Query.prototype.getFuzzyPronQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/**
 * @param {string} value
 * @return {!proto.yngdieng.Query} returns this
 */
proto.yngdieng.Query.prototype.setFuzzyPronQuery = function(value) {
  return jspb.Message.setOneofField(this, 1, proto.yngdieng.Query.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yngdieng.Query} returns this
 */
proto.yngdieng.Query.prototype.clearFuzzyPronQuery = function() {
  return jspb.Message.setOneofField(this, 1, proto.yngdieng.Query.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.Query.prototype.hasFuzzyPronQuery = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional PhonologyQuery phonology_query = 2;
 * @return {?proto.yngdieng.Query.PhonologyQuery}
 */
proto.yngdieng.Query.prototype.getPhonologyQuery = function() {
  return /** @type{?proto.yngdieng.Query.PhonologyQuery} */ (
    jspb.Message.getWrapperField(this, proto.yngdieng.Query.PhonologyQuery, 2));
};


/**
 * @param {?proto.yngdieng.Query.PhonologyQuery|undefined} value
 * @return {!proto.yngdieng.Query} returns this
*/
proto.yngdieng.Query.prototype.setPhonologyQuery = function(value) {
  return jspb.Message.setOneofWrapperField(this, 2, proto.yngdieng.Query.oneofGroups_[0], value);
};


/**
 * Clears the message field making it undefined.
 * @return {!proto.yngdieng.Query} returns this
 */
proto.yngdieng.Query.prototype.clearPhonologyQuery = function() {
  return this.setPhonologyQuery(undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.Query.prototype.hasPhonologyQuery = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string hanzi_query = 3;
 * @return {string}
 */
proto.yngdieng.Query.prototype.getHanziQuery = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/**
 * @param {string} value
 * @return {!proto.yngdieng.Query} returns this
 */
proto.yngdieng.Query.prototype.setHanziQuery = function(value) {
  return jspb.Message.setOneofField(this, 3, proto.yngdieng.Query.oneofGroups_[0], value);
};


/**
 * Clears the field making it undefined.
 * @return {!proto.yngdieng.Query} returns this
 */
proto.yngdieng.Query.prototype.clearHanziQuery = function() {
  return jspb.Message.setOneofField(this, 3, proto.yngdieng.Query.oneofGroups_[0], undefined);
};


/**
 * Returns whether this field is set.
 * @return {boolean}
 */
proto.yngdieng.Query.prototype.hasHanziQuery = function() {
  return jspb.Message.getField(this, 3) != null;
};


goog.object.extend(exports, proto.yngdieng);
