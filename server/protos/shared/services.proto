syntax = "proto3";

package yngdieng;
option csharp_namespace = "Yngdieng.Protos";

import "shared/phonology.proto";
import "shared/documents.proto";

service YngdiengService {
    rpc Search (SearchRequest) returns (SearchResponse);
    rpc GetDocument (GetDocumentRequest) returns (GetDocumentResponse);
    rpc GetFengDocument(GetFengDocumentRequest) returns (FengDocument);
}

message SearchRequest {
    reserved 1;
    string query = 2;
}

message SearchResponse {
    repeated SearchResultRow results = 1;
    // Milliseconds taken to compute the results.
    int64 computation_time_ms = 2;
}

message SearchResultRow {
    oneof result {
        Document document = 1;
        AggregatedDocument aggregated_document = 2;
        FengDocument feng_document = 3;
        // TODO: separator
    }
}

// Next ID: 3
message GetDocumentRequest {
    oneof document_id {
        int32 ciklin_id = 1;
        int32 dfd_id = 2;
    }
}

message GetDocumentResponse {
    Document document = 1;
}

message GetFengDocumentRequest {
    string id = 1;
}

// Internal Query
// Next ID: 5
message Query {
    oneof query {
        // 按模糊音查询
        string fuzzy_pron_query = 1;
        // 音韵地位查询
        PhonologyQuery phonology_query = 2;
        // 汉字查询（单字或词汇）
        string hanzi_query = 3;
    }

    SortByMethod sort_by = 4;

    // Must not be all empty
    message PhonologyQuery {
        // Optional
        Initial initial = 1;
        // Optional 
        Final final = 2;
        // Optional
        Tone tone = 3;
    }

    enum SortByMethod {
        SORT_BY_UNSPECIFIED = 0;
        INITIAL_FINAL_TONE = 1;
    }
 
}