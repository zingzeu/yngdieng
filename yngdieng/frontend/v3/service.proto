syntax = "proto3";

package yngdieng.frontend.v3;
option csharp_namespace = "Yngdieng.Frontend.V3.Protos";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/api/resource.proto";

import "yngdieng/frontend/v3/resources.proto";

service FrontendService {
  rpc GetWord(GetWordRequest) returns (Word) {
    option (google.api.http) = {
      get: "/v3/{name=words/*}"
    };
  };

  rpc GetWordList(GetWordListRequest) returns (WordList) {
    option (google.api.http) = {
      get: "/v3/{name=wordLists/*}"
    };
  };

  rpc ListWordListWords(ListWordListWordsRequest) returns (ListWordListWordsResponse) {
    option (google.api.http) = {
      get: "/v3/{parent=wordLists/*}/words"
    };
  }
}

message Word {
  option (google.api.resource) = {
    type: "api.ydict.net/Word",
    pattern: "words/{word}"
  };

  string name = 1;

  string hanzi = 2;

  message Pronunciation {
    string display_name = 1;
    string pronunciation = 2;
    AudioResource audio = 3;
  }

  // Recommended pronunciations.
  repeated Pronunciation pronunciations = 3;

  string snippet = 7;

  repeated RichTextNode explanation = 4;

  message AudioCard {
    string pronunciation = 1;
    string hint_primary = 2;
    string hint_secondary = 3;
    AudioResource audio = 4;
  }

  repeated AudioCard audio_cards = 5;

  repeated WordList word_lists = 6;
}

message AudioResource {
  message RemoteUrls {
    // A list of fallback Audio URLs.
    repeated string remote_urls = 1;
  }
  oneof resource {
    RemoteUrls remote_urls = 1;
  }
}

message RichTextNode {
  message VerticalContainerNode {
    repeated RichTextNode children = 1;
  }
  message InlineNode {
    oneof node {
      TextNode text = 1;
    }
  }
  message InlineContainerNode {
    repeated InlineNode children = 1;
  }
  message ListNode {
    bool ordered = 1;
    repeated RichTextNode children = 2;
  }
  message TextNode {
    string text = 1;
    repeated string styles = 2;
  }
  oneof node {
    VerticalContainerNode vertical_container = 1;
    InlineContainerNode inline_container = 3;
    ListNode list = 2;
  }

  repeated string styles = 4;
}

message GetWordRequest {
  string name = 1;
}

message GetWordListRequest {
  string name = 1;
}

message ListWordListWordsRequest {
  string parent = 1;

  int32 page_size = 2;

  string page_token = 3;
}

message ListWordListWordsResponse {

  repeated Word words = 1;

  string next_page_token = 2;
}